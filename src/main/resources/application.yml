spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      enabled: false
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

# 액추에이터 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      group:
        liveness:
          include: livenessState, diskSpace
        readiness:
          include: readinessState

azure:
  resource-group: ${AZURE_RESOURCE_GROUP:rg-az01-co001501-sbox-poc-team02}
  location: ${AZURE_LOCATION:koreacentral}
  subscription-id: ${AZURE_SUBSCRIPTION_ID:4793a72d-f4c1-4471-9327-e04225717278}
  acr: ${AZURE_ACR:team2final.azurecr.io}
  acr-username: ${AZURE_ACR_USERNAME:team2final}
  acr-password: ${AZURE_ACR_PASSWORD:WpKSx/2v/0GOQhAHQ5veJdw+62Kiyd4m3YKqHkG+d4+ACRBa0IhG}
  use-cli-auth: ${AZURE_USE_CLI_AUTH:false}
 

terraform:
  working-dir: ${TERRAFORM_WORKING_DIR:terraform}

# Kubernetes 설정
spring.cloud.kubernetes:
  reload:
    enabled: true
  config:
    enabled: true
    sources:
      - name: terraform-config
        namespace: terraform-service 